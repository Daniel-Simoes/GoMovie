{"ast":null,"code":"var _jsxFileName = \"/Users/danielsimoes/workspace/GoMovie/frontend/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from \"react\"; // import { FiChevronRight } from 'react-icons/fi';\n\nimport api from \"../../services/api\";\nimport Logo from \"../../assets/logo.png\";\nimport { Title, Form, Movie } from \"./styles\";\n\nconst Dashboard = () => {\n  const [newMovie, setNewMovie] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  async function handleAddMovie(event) {\n    event.preventDefault();\n    const response = await api.get(`http://www.omdbapi.com/?t=${newMovie}&apikey=79174ddd&type=movie`);\n    console.log(response.data);\n    const film = response.data;\n    setMovies([film]);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"GoMovie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Find information about Films\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newMovie,\n    onChange: e => setNewMovie(e.target.value),\n    placeholder: \"Type a movie name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \" Enter\")), /*#__PURE__*/React.createElement(Movie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, movies.map(film => /*#__PURE__*/React.createElement(\"a\", {\n    key: film.Title,\n    href: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: film.Poster,\n    alt: \"filme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, film.Title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, film.Year), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }\n  }, \"Genre: \"), film.Genre), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }, \"Plot: \"), film.Plot), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }\n  }, \"Director: \"), film.Director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, \"Actors: \"), film.Actors), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }\n  }, \"Rating: \"), film.imdbRating), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  }, \"Awards: \"), film.Awards), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \" Enter\"))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/danielsimoes/workspace/GoMovie/frontend/src/pages/Dashboard/index.tsx"],"names":["React","useState","api","Logo","Title","Form","Movie","Dashboard","newMovie","setNewMovie","movies","setMovies","handleAddMovie","event","preventDefault","response","get","console","log","data","film","e","target","value","map","Poster","Year","Genre","Plot","Director","Actors","imdbRating","Awards"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from \"react\";\n// import { FiChevronRight } from 'react-icons/fi';\nimport api from \"../../services/api\";\n\nimport Logo from \"../../assets/logo.png\";\nimport { Title, Form, Movie } from \"./styles\";\n\ninterface Film {\n    Poster:string;\n    Title:string;\n    Year:string;\n    Genre:string;\n    Plot:string;\n    Director:string;\n    Actors:string;\n    imdbRating:string;\n    Awards:string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [newMovie, setNewMovie] = useState('');\n  const [movies, setMovies] = useState<Film[]>([]);\n\n   async function handleAddMovie(event: FormEvent<HTMLFormElement>) {\n     event.preventDefault();\n\n     const response = await api.get<Film>(`http://www.omdbapi.com/?t=${newMovie}&apikey=79174ddd&type=movie`);\n     console.log(response.data);\n\n     const film = response.data ;\n\n     setMovies([film]);\n   }\n\n  return (\n    <>\n      <img src={Logo} alt=\"GoMovie\" />\n      <Title>Find information about Films</Title>\n\n      <Form onSubmit={handleAddMovie}>\n        <input\n          value={newMovie}\n          onChange={(e) => setNewMovie(e.target.value)}\n          placeholder=\"Type a movie name...\"\n        />\n        <button type=\"submit\"> Enter</button>\n      </Form>\n      <Movie>\n        {movies.map(film => (\n          <a\n         key={film.Title} href=\"test\">\n          <img src={film.Poster} alt=\"filme\"/>\n          <div>\n            <strong>{film.Title}</strong>\n            <p>{film.Year}</p>\n            <br/>\n            <p><span>Genre: </span>{film.Genre}</p>\n            <p><span>Plot: </span>{film.Plot}</p>\n            <p><span>Director: </span>{film.Director}</p>\n            <p><span>Actors: </span>{film.Actors}</p>\n            <p><span>Rating: </span>{film.imdbRating}</p>\n            <p><span>Awards: </span>{film.Awards}</p>\n            <button type=\"submit\"> Enter</button>\n          </div>\n\n        </a>\n        ))}\n      </Movie>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}